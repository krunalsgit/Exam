@model ExamModels.Models.ExamModel

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


@using (Html.BeginForm("Register","Home", FormMethod.Post,new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>ExamModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfBirth, "{0:yyyy/MM/dd}", new { htmlAttributes = new { @class = "form-control",type="date" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CountryId, new SelectList(ViewBag.Country, "id", "CountryName"),"Select-Country", new { @class = "form-control"})
            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StateId, new SelectList(ViewBag.State, "id", "StateName"), "Select-State", new { @class = "form-control"  })
            @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.CityId, new SelectList(ViewBag.City, "id", "CityName"), "Select-City",  new { @class = "form-control"  })
            @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProfilePhoto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" class="form-control" name="propic" id="propic"/>
            @*@Html.EditorFor(model => model.propic, new { htmlAttributes = new { @class = "form-control",type="file", accept = "image/png, image/gif, image/jpeg" } })*@
            @Html.ValidationMessageFor(model => model.ProfilePhoto, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Documents, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Documents, new { htmlAttributes = new { @class = "form-control" ,type = "file" ,multiple=true} })
            @Html.ValidationMessageFor(model => model.Documents, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })Male
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-10">
            @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })Female
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

<div class="form-group">
    @Html.HiddenFor(model => model.Hobbies, new { htmlAttributes = new { id = "Hobbies" } })
    @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
    <input type="checkbox" id="r" onchange="getSelected()" value="Cricket" />
    Cricket
    <input id="w" type="checkbox" value="Singing" onchange="getSelected()" />
    Singing

    <script>
        function getSelected() {
            var sList = "";
            $('input[type=checkbox]').each(function () {
                if (this.checked) {
                    sList += this.value + " ";
                }
            });
            $("#Hobbies").val(sList);
        }
    </script>
    @Html.ValidationMessageFor(model => model.Hobbies)
</div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-4">
                <input class="btn btn-primary" type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Already have an account!", "Login")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script>
        $(document).ready(function () {
            $("#CountryId").change(function () {
                $.get('/Home/GetState?id=' + $("#CountryId").val(), function (data) {
                    $("#StateId").empty();
                    $("#StateId").append('<option value="' + 0 + '">Select-State</option>');
                    $("#CityId").empty();
                    $("#CityId").append('<option value="' + 0 + '">Select-City</option>');
                    $.each(data, function (index, row) {
                        $("#StateId").append('<option value="' + row.id + '">' + row.StateName + '</option>')
                    })
                })
            })
            $("#StateId").change(function () {
                $.get('/Home/GetCity?id=' + $("#StateId").val(), function (data) {
                    $("#CityId").empty();
                    $("#CityId").append('<option value="' + 0 + '">Select-City</option>');
                    $.each(data, function (index, row) {
                        $("#CityId").append('<option value="' + row.id + '">' + row.CityName + '</option>')
                    })
                })
            })
        })
    </script>
