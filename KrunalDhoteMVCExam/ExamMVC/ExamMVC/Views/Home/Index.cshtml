@model ExamModels.Models.ExamModel
@{
    ViewBag.Title = "HomePage";
}
@if (@ExamMVC.SessionHelper.SessionLogin.Name != "") { 
    @section imgData{
        <div class="d-flex">
            <div class="m-3">@Model.FirstName @Model.LastName</div>
            <img class="user img-circle" src="~/@Model.ProfilePhoto" />
        </div>
    }
}

<div class="mt-5">

    <h1>Welcome To My World <span>@(Model.Gender=="Male"?"Mr.":"Mrs.")</span>  @ExamMVC.SessionHelper.SessionLogin.Name!</h1>
    <p>Here you can see and edit your profile in my application.</p>

    <div class="text-center">
        <button class="btn btn-primary m-5" data-bs-toggle="modal" data-bs-target="#EditModal">Edit Profile</button>
        <button id="details" class="btn btn-primary m-5">Show Details</button>
    </div>
</div>

<div class="text-center d-flex justify-content-center" id="Information">
    <div class="card">
        <img src="~/@Model.ProfilePhoto" class="card-img-top" alt="">
        <div class="card-body">
            <h5 class="card-title">@Model.FirstName @Model.LastName</h5>
            <div class="text-end">
                <strong>Email : </strong>@Model.Email          <br />
                <strong>Address : </strong>@Model.Address<br />
                <strong>Date Of Birth : </strong>@Model.DateOfBirth.ToString().Remove(9)<br />
                <strong>Gender : </strong>@Model.Gender<br />
                <strong>Hobbie : </strong>@Model.Hobbies
            </div>
            <p class="card-text"></p>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#EditModal">Edit Details</button>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="EditModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Update Details</h1>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Register", "Home"))
                {
                    @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { id = "Id" } })
                    <div class="form-horizontal">
                        <h4>ExamModel</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateOfBirth, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control", type = "date" } })
                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.CountryId, new SelectList(ViewBag.Country, "id", "CountryName"), "Select-Country", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.StateId, new SelectList(ViewBag.State, "id", "StateName"), "Select-State", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StateId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CityId, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.CityId, new SelectList(ViewBag.City, "id", "CityName"), "Select-City", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CityId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProfilePhoto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ProfilePhoto, new { htmlAttributes = new { @class = "form-control", type = "file", accept = "image/png, image/gif, image/jpeg" } })
                                @Html.ValidationMessageFor(model => model.ProfilePhoto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Documents, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Documents, new { htmlAttributes = new { @class = "form-control", type = "file", multiple = true } })
                                @Html.ValidationMessageFor(model => model.Documents, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.RadioButtonFor(model => model.Gender, "Male", new { htmlAttributes = new { @class = "form-control" } })Male
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-10">
                                @Html.RadioButtonFor(model => model.Gender, "Female", new { htmlAttributes = new { @class = "form-control" } })Female
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.HiddenFor(model => model.Hobbies, new { htmlAttributes = new { id = "Hobbies" } })
                            @Html.LabelFor(model => model.Hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
                            <input type="checkbox" id="r" onchange="getSelected()" value="Cricket" />
                            Cricket
                            <input id="w" type="checkbox" value="Singing" onchange="getSelected()" />
                            Singing

                            <script>
                                function getSelected() {
                                    var sList = "";
                                    $('input[type=checkbox]').each(function () {
                                        if (this.checked) {
                                            sList += this.value + " ";

                                        }
                                    });
                                    $("#Hobbies").val(sList);
                                }
                            </script>
                            @Html.ValidationMessageFor(model => model.Hobbies)
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save changes</button>
                    </div>
                }
            </div>
        </div>
    </div>


</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.min.js" integrity="sha384-cuYeSxntonz0PPNlHhBs68uyIAVpIIOZZ5JqeqvYYIcEL727kskC66kF92t6Xl2V" crossorigin="anonymous"></script>


<script>

    $(document).ready(function () {
        $(".card").hide()

        $("#details").click(function () {
            $(".card").show();
        })

        $("#CountryId").change(function () {
            $.get('/Home/GetState?id=' + $("#CountryId").val(), function (data) {
                $("#StateId").empty();
                $("#StateId").append('<option value="' + 0 + '">Select-State</option>');
                $("#CityId").empty();
                $("#CityId").append('<option value="' + 0 + '">Select-City</option>');
                $.each(data, function (index, row) {
                    $("#StateId").append('<option value="' + row.id + '">' + row.StateName + '</option>')
                })
            })
        })
        $("#StateId").change(function () {
            $.get('/Home/GetCity?id=' + $("#StateId").val(), function (data) {
                $("#CityId").empty();
                $("#CityId").append('<option value="' + 0 + '">Select-City</option>');
                $.each(data, function (index, row) {
                    $("#CityId").append('<option value="' + row.id + '">' + row.CityName + '</option>')
                })
            })
        })

        var hobbie = $("#Hobbies").val().slice(0,-1).split(" ")
        for (let i = 0; i < hobbie.length; i++) {
            if (hobbie[i] == "Cricket") {
                $("#r").prop("checked", true);
            } else if (hobbie[i] == "Singing") {
                $("#w").prop("checked", true);
            }
        }

        console.log(new Date($("#DateOfBirth").val()))
    })
</script>